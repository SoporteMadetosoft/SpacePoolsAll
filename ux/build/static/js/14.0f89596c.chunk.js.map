{"version":3,"sources":["views/authentication/Register.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroupAddon.js","@core/components/input-password-toggle/index.js"],"names":["Register","ability","useContext","AbilityContext","useSkin","skin","history","useHistory","dispatch","useDispatch","useForm","register","errors","handleSubmit","trigger","useState","email","setEmail","valErrors","setValErrors","username","setUsername","password","setPassword","setTerms","illustration","source","require","default","Terms","className","href","onClick","e","preventDefault","to","lg","sm","src","alt","md","tag","action","onSubmit","isObjEmpty","useJwt","then","res","data","error","arr","property","console","user","accessToken","update","handleLogin","push","catch","err","log","for","autoFocus","type","value","placeholder","id","name","onChange","errs","target","classnames","innerRef","required","validate","Object","keys","length","label","checked","invalid","terms","Ripple","block","color","size","propTypes","tagPropType","PropTypes","string","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","InputGroupText","addonType","oneOf","isRequired","children","node","InputGroupAddon","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","Label","Input","style","backgroundColor","renderIcon"],"mappings":"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","file":"static/js/14.0f89596c.chunk.js","sourcesContent":["import { Fragment, useState, useContext } from 'react'\nimport { isObjEmpty } from '@utils'\nimport classnames from 'classnames'\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { handleLogin } from '@auth/redux/actions'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\nimport { Row, Col, CardTitle, CardText, FormGroup, Label, Button, Form, Input, CustomInput } from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\n\nconst Register = () => {\n  const ability = useContext(AbilityContext)\n\n  const [skin, setSkin] = useSkin()\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const { register, errors, handleSubmit, trigger } = useForm()\n\n  const [email, setEmail] = useState('')\n  const [valErrors, setValErrors] = useState({})\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [terms, setTerms] = useState(false)\n\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const Terms = () => {\n    return (\n      <Fragment>\n        I agree to\n        <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\n          privacy policy & terms\n        </a>\n      </Fragment>\n    )\n  }\n\n  const onSubmit = () => {\n    if (isObjEmpty(errors)) {\n      useJwt\n        .register({ username, email, password })\n        .then(res => {\n          if (res.data.error) {\n            const arr = {}\n            for (const property in res.data.error) {\n              if (res.data.error[property] !== null) arr[property] = res.data.error[property]\n            }\n            setValErrors(arr)\n            if (res.data.error.email !== null) console.error(res.data.error.email)\n            if (res.data.error.username !== null) console.error(res.data.error.username)\n          } else {\n            setValErrors({})\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\n            ability.update(res.data.user.ability)\n            dispatch(handleLogin(data))\n            history.push('/')\n          }\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  const handleUsernameChange = e => {\n    const errs = valErrors\n    if (errs.username) delete errs.username\n    setUsername(e.target.value)\n    setValErrors(errs)\n  }\n\n  const handleEmailChange = e => {\n    const errs = valErrors\n    if (errs.email) delete errs.email\n    setEmail(e.target.value)\n    setValErrors(errs)\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <h2 className='brand-text text-primary ml-1'>Space Pools</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Adventure starts here 🚀\n            </CardTitle>\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\n\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Input\n                  autoFocus\n                  type='text'\n                  value={username}\n                  placeholder='johndoe'\n                  id='register-username'\n                  name='register-username'\n                  onChange={handleUsernameChange}\n                  className={classnames({ 'is-invalid': errors['register-username'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.username ? (\n                  <small className='text-danger'>{valErrors.username}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Input\n                  type='email'\n                  value={email}\n                  id='register-email'\n                  name='register-email'\n                  onChange={handleEmailChange}\n                  placeholder='john@example.com'\n                  className={classnames({ 'is-invalid': errors['register-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.email ? (\n                  <small className='text-danger'>{valErrors.email}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle\n                  value={password}\n                  id='register-password'\n                  name='register-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['register-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type='checkbox'\n                  id='terms'\n                  name='terms'\n                  value='terms'\n                  label={<Terms />}\n                  className='custom-control-Primary'\n                  innerRef={register({ required: true })}\n                  onChange={e => setTerms(e.target.checked)}\n                  invalid={errors.terms && true}\n                />\n              </FormGroup>\n              <Button.Ripple type='submit' block color='primary'>\n                Sign up\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>Already have an account?</span>\n              <Link to='/login'>\n                <span>Sign in instead</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button.Ripple color='facebook'>\n                <Facebook size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='twitter'>\n                <Twitter size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='google'>\n                <Mail size={14} />\n              </Button.Ripple>\n              <Button.Ripple className='mr-0' color='github'>\n                <GitHub size={14} />\n              </Button.Ripple>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Register\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer' style={{backgroundColor: 'transparent !important'}}>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}